{"version":3,"file":"static/js/396.44d9ec04.chunk.js","mappings":"mKAiBA,UAfc,SAAH,GAAY,EAANA,OAAuB,IAAfC,EAAO,EAAPA,QAGvB,OAFAC,QAAQC,IAAI,iBAAkB,gBAEvBC,EAAAA,EAAAA,UAAQ,WAEb,OADAF,QAAQC,IAAI,YAAa,kBAEvB,iBAAKE,UAAU,QAAO,WACpB,0FACA,mBAAQJ,QAASA,EAAQ,mCAI/B,GAAG,GACL,C,kFCuBA,UAjCgB,WACdC,QAAQC,IAAI,iBACZ,OAA4BG,EAAAA,EAAAA,UAAS,GAAE,eAAhCC,EAAM,KAAEC,EAAS,KACxB,GAA4BF,EAAAA,EAAAA,UAAS,GAAE,eAAhCN,EAAM,KAAES,EAAS,KAElBC,GAAeC,EAAAA,EAAAA,cAAY,WAC/BT,QAAQC,IAAI,SAAUH,GACtBS,EAAUT,EAAS,EACrB,GAAE,CAACA,IAEH,OACE,iBAAKK,UAAU,SAAQ,WACrB,4BACE,0FACA,4BACE,mBACEJ,QAAS,WACPO,GAAU,SAACI,GAAG,OAAKA,EAAM,CAAC,GAC5B,EAAE,kCAIJ,yEAGJ,0BACE,yFAAeL,QAEjB,SAAC,UAAK,CAACP,OAAQA,EAAQC,QAASS,MAGtC,C,6BCnCA,WAAiB,C","sources":["050_useMemo/end/Child.js","050_useMemo/end/Example.js","webpack://react-app-template/./src/050_useMemo/end/Example.css?f8fe"],"sourcesContent":["import { useMemo } from \"react\";\n\nconst Child = ({ countB, onClick }) => {\n  console.log(\"%cChild render\", \"color: red;\");\n\n  return useMemo(() => {\n    console.log(\"%cuseMemo\", \"color: green;\");\n    return (\n      <div className=\"child\">\n        <h2>子コンポーネント領域</h2>\n        <button onClick={onClick}>ボタンB</button>\n        {/* <p>ボタンBクリック回数：{countB}</p> */}\n      </div>\n    );\n  }, []);\n};\n\nexport default Child;\n","// POINT useMemoで値をメモ化\nimport React, { useCallback, useState } from \"react\";\nimport Child from \"./Child\";\nimport \"./Example.css\";\n\nconst Example = () => {\n  console.log(\"Parent render\");\n  const [countA, setCountA] = useState(0);\n  const [countB, setCountB] = useState(0);\n\n  const clickHandler = useCallback(() => {\n    console.log('countB', countB);\n    setCountB(countB + 1);\n  },[countB]);\n  \n  return (\n    <div className=\"parent\">\n      <div>\n        <h3>親コンポーネント領域</h3>\n        <div>\n          <button\n            onClick={() => {\n              setCountA((pre) => pre + 1);\n            }}\n          >\n            ボタンA\n          </button>\n          <span>親のstateを更新</span>\n        </div>\n      </div>\n      <div>\n        <p>ボタンAクリック回数：{countA}</p>\n      </div>\n      <Child countB={countB} onClick={clickHandler}/>\n    </div>\n  );\n};\n\nexport default Example;\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["countB","onClick","console","log","useMemo","className","useState","countA","setCountA","setCountB","clickHandler","useCallback","pre"],"sourceRoot":""}