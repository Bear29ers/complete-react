{"version":3,"file":"static/js/274.833d54cb.chunk.js","mappings":"+KAiDA,UA3CgB,WACdA,QAAQC,IAAI,UAEZ,OAA4BC,EAAAA,EAAAA,UAAS,CACnCC,IAAK,IACL,eAFKC,EAAM,KAAEC,EAAS,KAYlBC,EAASC,OAAOC,GART,CAAEL,IAAK,GAEP,CAAEA,IAAK,IAWpB,OAHAH,QAAQC,IAAIK,GACZN,QAAQC,KAFY,IAKlB,iBAAKQ,UAAU,SAAQ,WACrB,4BACE,8EACA,mBACEC,QAAS,WACPL,GAAU,SAACM,GAGT,OAFc,UAAQA,EAGxB,GACF,EAAE,qCAKN,0BACE,yFAAeP,EAAOD,WAI9B,C,qEC9Ce,SAASS,EAAgBC,EAAKC,EAAKC,GAYhD,OAXAD,GAAM,EAAAE,EAAA,GAAcF,MACTD,EACTN,OAAOU,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAENF,CACT,CCbA,SAASQ,EAAQC,EAAQC,GACvB,IAAIC,EAAOjB,OAAOiB,KAAKF,GACvB,GAAIf,OAAOkB,sBAAuB,CAChC,IAAIC,EAAUnB,OAAOkB,sBAAsBH,GAC3CC,IAAmBG,EAAUA,EAAQC,QAAO,SAAUC,GACpD,OAAOrB,OAAOsB,yBAAyBP,EAAQM,GAAKV,UACtD,KAAKM,EAAKM,KAAKC,MAAMP,EAAME,EAC7B,CACA,OAAOF,CACT,CACe,SAASQ,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAS,MAAQF,UAAUD,GAAKC,UAAUD,GAAK,CAAC,EACpDA,EAAI,EAAIb,EAAQd,OAAO8B,IAAS,GAAIC,SAAQ,SAAUxB,GACpD,EAAemB,EAAQnB,EAAKuB,EAAOvB,GACrC,IAAKP,OAAOgC,0BAA4BhC,OAAOiC,iBAAiBP,EAAQ1B,OAAOgC,0BAA0BF,IAAWhB,EAAQd,OAAO8B,IAASC,SAAQ,SAAUxB,GAC5JP,OAAOU,eAAegB,EAAQnB,EAAKP,OAAOsB,yBAAyBQ,EAAQvB,GAC7E,GACF,CACA,OAAOmB,CACT,C","sources":["010_Objectis/start/Example.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["/* 再レンダリングが発生する条件\nstateの値が変更された時\nObject.isによって変更は検知される */\n\nimport { useState } from \"react\";\n\nconst Example = () => {\n  console.log(\"render\");\n\n  const [countA, setCountA] = useState({\n    val: 0,\n  });\n\n  const obj1 = { val: 0 };\n  // const obj2 = obj1;\n  const obj3 = { val: 0 };\n  // falseになる、比較対象がオブジェクトの場合は値が同じでも異なるメモリ空間に割り当てられていればfalseになる\n  // const isSame = Object.is({ val: 0 }, { val: 0 });\n  // 参照先が同じなのでtrue\n  // const isSame = Object.is(obj1, obj2);\n  // 参照先が別なのでfalse\n  const isSame = Object.is(obj1, obj3);\n  const isSameEqual = \"\" == false;\n  console.log(isSame);\n  console.log(isSameEqual);\n\n  return (\n    <div className=\"parent\">\n      <div>\n        <h3>再レンダリング？</h3>\n        <button\n          onClick={() => {\n            setCountA((prev) => {\n              const newState = { ...prev };\n              // prev.val = 1;\n              return newState;\n            });\n          }}\n        >\n          ボタンA\n        </button>\n      </div>\n      <div>\n        <p>ボタンAクリック回数：{countA.val}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Example;\n","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}"],"names":["console","log","useState","val","countA","setCountA","isSame","Object","is","className","onClick","prev","_defineProperty","obj","key","value","toPropertyKey","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}