{"version":3,"file":"static/js/195.6adef6c5.chunk.js","mappings":"qKAOMA,EAHG,IAAIC,MAGwB,KAHbC,KAAK,MAAMC,KAAI,SAACC,EAAMC,GAAK,qBAAaA,EAAK,IAsCrE,UAjCgB,WAEd,OAAkCC,EAAAA,EAAAA,UAAS,IAAG,eAAvCC,EAAS,KAAEC,EAAY,KASxBC,EAAgBT,EACrBU,QAAO,SAACN,GACP,MAAkB,KAAdG,GACGH,EAAKO,SAASJ,EACvB,IACCJ,KAAI,SAACC,GAAI,OACR,wBAAgBA,GAAPA,EAAiB,IAGtBQ,GAAgBC,EAAAA,EAAAA,kBAAiBJ,GAEvC,OACE,iCACE,kBAAOK,KAAK,OAAOC,SApBD,SAACC,GAIrBR,EAAaQ,EAAEC,OAAOC,MACxB,KAiBI,wBACGN,MAIT,C","sources":["070_useDeferredValue/end/Example.js"],"sourcesContent":["// POINT [Concurrent Mode]useDeferedValueでユーザビリティを向上\nimport { useState, useTransition, useDeferredValue } from \"react\";\n\nconst generateDummyItem = (num) => {\n  return new Array(num).fill(null).map((item, index) => `item ${index}`);\n};\n\nconst dummyItems = generateDummyItem(10000);\n\nconst Example = () => {\n  // const [isPending, startTransition] = useTransition();\n  const [filterVal, setFilterVal] = useState(\"\");\n\n  const changeHandler = (e) => {\n    // startTransition(() => {\n    //   setFilterVal(e.target.value);\n    // });\n    setFilterVal(e.target.value);\n  };\n\n  const filteredItems = dummyItems\n  .filter((item) => {\n    if (filterVal === \"\") return true;\n    return item.includes(filterVal);\n  })\n  .map((item) => (\n    <li key={item}>{item}</li>\n  ));\n\n  const deferredItems = useDeferredValue(filteredItems)\n\n  return (\n    <>\n      <input type=\"text\" onChange={changeHandler} />\n      {/* {isPending && <div>Loading...</div>} */}\n      <ul>\n        {deferredItems}\n      </ul>\n    </>\n  );\n};\n\nexport default Example;\n"],"names":["dummyItems","Array","fill","map","item","index","useState","filterVal","setFilterVal","filteredItems","filter","includes","deferredItems","useDeferredValue","type","onChange","e","target","value"],"sourceRoot":""}