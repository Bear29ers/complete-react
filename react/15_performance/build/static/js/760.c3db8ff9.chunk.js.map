{"version":3,"file":"static/js/760.c3db8ff9.chunk.js","mappings":"gKAcA,UAZc,SAAH,GAA6B,IAAvBA,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAGvB,OAFAC,QAAQC,IAAI,iBAAkB,gBAG5B,iBAAKC,UAAU,QAAO,WACpB,0FACA,mBAAQH,QAASA,EAAQ,kCACzB,yFAAeD,OAGrB,C,kFC8BA,UAtCgB,WACdE,QAAQC,IAAI,iBACZ,OAA4BE,EAAAA,EAAAA,UAAS,GAAE,eAAhCC,EAAM,KAAEC,EAAS,KACxB,GAA4BF,EAAAA,EAAAA,UAAS,GAAE,eAAhCL,EAAM,KAAEQ,EAAS,KAMxB,OACE,iCACE,sDACA,4OAGA,iBAAKJ,UAAU,SAAQ,WACrB,4BACE,0FACA,4BACE,mBACEH,QAAS,WACPM,GAAU,SAACE,GAAG,OAAKA,EAAM,CAAC,GAC5B,EAAE,kCAIJ,yEAGJ,0BACE,yFAAeH,QAEjB,SAAC,UAAK,CAACN,OAAQA,EAAQC,QA3BR,WACnBO,EAAUR,EAAS,EACrB,SA6BF,C,8BCvCA,WAAiB,C","sources":["055_practice_re-rendering/start/Child.js","055_practice_re-rendering/start/Example.js","webpack://react-app-template/./src/055_practice_re-rendering/start/Example.css?2df8"],"sourcesContent":["import React from \"react\";\n\nconst Child = ({ countB, onClick }) => {\n  console.log(\"%cChild render\", \"color: red;\");\n\n  return (\n    <div className=\"child\">\n      <h2>子コンポーネント領域</h2>\n      <button onClick={onClick}>ボタンB</button>\n      <p>ボタンBクリック回数：{countB}</p>\n    </div>\n  );\n};\n\nexport default Child;\n","import React, { useCallback, useState } from \"react\";\nimport Child from \"./Child\";\nimport \"./Example.css\";\n\nconst Example = () => {\n  console.log(\"Parent render\");\n  const [countA, setCountA] = useState(0);\n  const [countB, setCountB] = useState(0);\n\n  const clickHandler = () => {\n    setCountB(countB + 1);\n  };\n  \n  return (\n    <>\n      <h3>練習問題</h3>\n      <p>\n        useCallbackとReact.memoを使って不要な再レンダリングを防ぐコードに変更してください。\n      </p>\n      <div className=\"parent\">\n        <div>\n          <h3>親コンポーネント領域</h3>\n          <div>\n            <button\n              onClick={() => {\n                setCountA((pre) => pre + 1);\n              }}\n            >\n              ボタンA\n            </button>\n            <span>親のstateを更新</span>\n          </div>\n        </div>\n        <div>\n          <p>ボタンAクリック回数：{countA}</p>\n        </div>\n        <Child countB={countB} onClick={clickHandler}/>\n      </div>\n    </>\n  );\n};\n\nexport default Example;\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["countB","onClick","console","log","className","useState","countA","setCountA","setCountB","pre"],"sourceRoot":""}